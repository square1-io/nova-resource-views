<template>
    <loading-view
        :loading="initialLoading"
        :dusk="resourceName + '-index-component'"
    >
        <custom-index-header
            v-if="!viaResource"
            class="mb-3"
            :resource-name="resourceName"
        />

        <div v-if="shouldShowCards">
            <cards
                v-if="smallCards.length > 0"
                :cards="smallCards"
                class="mb-3"
                :resource-name="resourceName"
            />

            <cards
                v-if="largeCards.length > 0"
                :cards="largeCards"
                size="large"
                :resource-name="resourceName"
            />
        </div>

        <heading :level="1" class="mb-3" v-html="headingTitle" />

        <div class="flex">
            <!-- Search -->
            <div
                v-if="resourceInformation.searchable && !viaHasOne"
                class="relative h-9 flex-no-shrink"
                :class="{
                    'mb-6': resourceInformation.searchable && !viaHasOne
                }"
            >
                <icon
                    type="search"
                    class="absolute search-icon-center ml-3 text-70"
                />

                <input
                    data-testid="search-input"
                    dusk="search"
                    class="appearance-none form-search w-search pl-search shadow"
                    :placeholder="__('Search')"
                    type="search"
                    v-model="search"
                    @keydown.stop="performSearch"
                    @search="performSearch"
                />
            </div>

            <div
                class="w-full flex items-center"
                :class="{ 'mb-6': !viaResource }"
            >
                <custom-index-toolbar
                    v-if="!viaResource"
                    :resource-name="resourceName"
                />

                <!-- Create / Attach Button -->
                <create-resource-button
                    :singular-name="singularName"
                    :resource-name="resourceName"
                    :via-resource="viaResource"
                    :via-resource-id="viaResourceId"
                    :via-relationship="viaRelationship"
                    :relationship-type="relationshipType"
                    :authorized-to-create="
                        authorizedToCreate && !resourceIsFull
                    "
                    :authorized-to-relate="authorizedToRelate"
                    class="flex-no-shrink ml-auto"
                    :class="{ 'mb-6': viaResource }"
                />
            </div>
        </div>

        <card>
            <div
                class="flex items-center"
                :class="{
                    'py-3 border-b border-50':
                        shouldShowCheckBoxes ||
                        shouldShowDeleteMenu ||
                        softDeletes ||
                        !viaResource ||
                        hasFilters
                }"
            >
                <div class="flex items-center">
                    <div class="px-3" v-if="shouldShowCheckBoxes">
                        <!-- Select All -->
                        <dropdown
                            dusk="select-all-dropdown"
                            placement="bottom-end"
                            class="-mx-2"
                        >
                            <dropdown-trigger class="px-2">
                                <fake-checkbox :checked="selectAllChecked" />
                            </dropdown-trigger>

                            <dropdown-menu
                                slot="menu"
                                direction="ltr"
                                width="250"
                            >
                                <div class="p-4">
                                    <ul class="list-reset">
                                        <li class="flex items-center mb-4">
                                            <checkbox-with-label
                                                :checked="selectAllChecked"
                                                @input="toggleSelectAll"
                                            >
                                                {{ __("Select All") }}
                                            </checkbox-with-label>
                                        </li>
                                        <li class="flex items-center">
                                            <checkbox-with-label
                                                dusk="select-all-matching-button"
                                                :checked="
                                                    selectAllMatchingChecked
                                                "
                                                @input="toggleSelectAllMatching"
                                            >
                                                <template>
                                                    <span class="mr-1">
                                                        {{
                                                            __(
                                                                "Select All Matching"
                                                            )
                                                        }}
                                                        ({{
                                                            allMatchingResourceCount
                                                        }})
                                                    </span>
                                                </template>
                                            </checkbox-with-label>
                                        </li>
                                    </ul>
                                </div>
                            </dropdown-menu>
                        </dropdown>
                    </div>
                </div>

                <div class="flex items-center ml-auto px-3">
                    <!-- Action Selector -->
                    <action-selector
                        v-if="selectedResources.length > 0"
                        :resource-name="resourceName"
                        :actions="actions"
                        :pivot-actions="pivotActions"
                        :pivot-name="pivotName"
                        :query-string="{
                            currentSearch,
                            encodedFilters,
                            currentTrashed,
                            viaResource,
                            viaResourceId,
                            viaRelationship
                        }"
                        :selected-resources="selectedResourcesForActionSelector"
                        @actionExecuted="getResources"
                    />

                    <!-- Lenses -->
                    <dropdown
                        class="bg-30 hover:bg-40 mr-3 rounded"
                        v-if="lenses.length > 0"
                    >
                        <dropdown-trigger class="px-3">
                            <h3
                                slot="default"
                                class="flex items-center font-normal text-base text-90 h-9"
                            >
                                {{ __("Lens") }}
                            </h3>
                        </dropdown-trigger>

                        <dropdown-menu slot="menu" width="240" direction="rtl">
                            <lens-selector
                                :resource-name="resourceName"
                                :lenses="lenses"
                            />
                        </dropdown-menu>
                    </dropdown>

                    <!-- Filters -->
                    <filter-menu
                        :resource-name="resourceName"
                        :soft-deletes="softDeletes"
                        :via-resource="viaResource"
                        :via-has-one="viaHasOne"
                        :trashed="trashed"
                        :per-page="perPage"
                        :per-page-options="perPageOptions"
                        @clear-selected-filters="clearSelectedFilters"
                        @filter-changed="filterChanged"
                        @trashed-changed="trashedChanged"
                        @per-page-changed="updatePerPageChanged"
                    />

                    <delete-menu
                        v-if="shouldShowDeleteMenu"
                        dusk="delete-menu"
                        :soft-deletes="softDeletes"
                        :resources="resources"
                        :selected-resources="selectedResources"
                        :via-many-to-many="viaManyToMany"
                        :all-matching-resource-count="allMatchingResourceCount"
                        :all-matching-selected="selectAllMatchingChecked"
                        :authorized-to-delete-selected-resources="
                            authorizedToDeleteSelectedResources
                        "
                        :authorized-to-force-delete-selected-resources="
                            authorizedToForceDeleteSelectedResources
                        "
                        :authorized-to-delete-any-resources="
                            authorizedToDeleteAnyResources
                        "
                        :authorized-to-force-delete-any-resources="
                            authorizedToForceDeleteAnyResources
                        "
                        :authorized-to-restore-selected-resources="
                            authorizedToRestoreSelectedResources
                        "
                        :authorized-to-restore-any-resources="
                            authorizedToRestoreAnyResources
                        "
                        @deleteSelected="deleteSelectedResources"
                        @deleteAllMatching="deleteAllMatchingResources"
                        @forceDeleteSelected="forceDeleteSelectedResources"
                        @forceDeleteAllMatching="
                            forceDeleteAllMatchingResources
                        "
                        @restoreSelected="restoreSelectedResources"
                        @restoreAllMatching="restoreAllMatchingResources"
                        @close="deleteModalOpen = false"
                    />
                </div>
            </div>

            <loading-view :loading="loading">
                <div
                    v-if="!resources.length"
                    class="flex justify-center items-center px-6 py-8"
                >
                    <div class="text-center">
                        <svg
                            class="mb-3"
                            xmlns="http://www.w3.org/2000/svg"
                            width="65"
                            height="51"
                            viewBox="0 0 65 51"
                        >
                            <path
                                fill="#A8B9C5"
                                d="M56 40h2c.552285 0 1 .447715 1 1s-.447715 1-1 1h-2v2c0 .552285-.447715 1-1 1s-1-.447715-1-1v-2h-2c-.552285 0-1-.447715-1-1s.447715-1 1-1h2v-2c0-.552285.447715-1 1-1s1 .447715 1 1v2zm-5.364125-8H38v8h7.049375c.350333-3.528515 2.534789-6.517471 5.5865-8zm-5.5865 10H6c-3.313708 0-6-2.686292-6-6V6c0-3.313708 2.686292-6 6-6h44c3.313708 0 6 2.686292 6 6v25.049375C61.053323 31.5511 65 35.814652 65 41c0 5.522847-4.477153 10-10 10-5.185348 0-9.4489-3.946677-9.950625-9zM20 30h16v-8H20v8zm0 2v8h16v-8H20zm34-2v-8H38v8h16zM2 30h16v-8H2v8zm0 2v4c0 2.209139 1.790861 4 4 4h12v-8H2zm18-12h16v-8H20v8zm34 0v-8H38v8h16zM2 20h16v-8H2v8zm52-10V6c0-2.209139-1.790861-4-4-4H6C3.790861 2 2 3.790861 2 6v4h52zm1 39c4.418278 0 8-3.581722 8-8s-3.581722-8-8-8-8 3.581722-8 8 3.581722 8 8 8z"
                            />
                        </svg>

                        <h3 class="text-base text-80 font-normal mb-6">
                            {{
                                __("No :resource matched the given criteria.", {
                                    resource: singularName.toLowerCase()
                                })
                            }}
                        </h3>

                        <create-resource-button
                            classes="btn btn-sm btn-outline inline-flex items-center focus:outline-none focus:shadow-outline active:outline-none active:shadow-outline"
                            :singular-name="singularName"
                            :resource-name="resourceName"
                            :via-resource="viaResource"
                            :via-resource-id="viaResourceId"
                            :via-relationship="viaRelationship"
                            :relationship-type="relationshipType"
                            :authorized-to-create="
                                authorizedToCreate && !resourceIsFull
                            "
                            :authorized-to-relate="authorizedToRelate"
                        >
                        </create-resource-button>
                    </div>
                </div>

                <div class="overflow-hidden overflow-x-auto relative">
                    <!-- Resource Table -->
                    <resource-table
                        :authorized-to-relate="authorizedToRelate"
                        :resource-name="resourceName"
                        :resources="resources"
                        :singular-name="singularName"
                        :selected-resources="selectedResources"
                        :selected-resource-ids="selectedResourceIds"
                        :actions-are-available="allActions.length > 0"
                        :should-show-checkboxes="shouldShowCheckBoxes"
                        :via-resource="viaResource"
                        :via-resource-id="viaResourceId"
                        :via-relationship="viaRelationship"
                        :relationship-type="relationshipType"
                        :update-selection-status="updateSelectionStatus"
                        @order="orderByField"
                        @delete="deleteResources"
                        @restore="restoreResources"
                        @actionExecuted="getResources"
                        ref="resourceTable"
                    />
                </div>

                <!-- Pagination -->
                <component
                    :is="paginationComponent"
                    v-if="shouldShowPagination"
                    :next="hasNextPage"
                    :previous="hasPreviousPage"
                    @load-more="loadMore"
                    @page="selectPage"
                    :pages="totalPages"
                    :page="currentPage"
                    :per-page="perPage"
                    :resource-count-label="resourceCountLabel"
                    :current-resource-count="resources.length"
                    :all-matching-resource-count="allMatchingResourceCount"
                >
                    <span
                        v-if="resourceCountLabel"
                        class="text-sm text-80 px-4"
                        :class="{
                            'ml-auto': paginationComponent == 'pagination-links'
                        }"
                    >
                        {{ resourceCountLabel }}
                    </span>
                </component>
            </loading-view>
        </card>
    </loading-view>
</template>
<script>
import Index from "@nova/views/Index";
import CreateResourceButton from "./../components/CreateResourceButton";
import ResourceTable from "./../components/ResourceTable";

export default {
    mixins: [Index],
    components: {
        "create-resource-button": CreateResourceButton,
        "resource-table": ResourceTable
    }
};
</script>
