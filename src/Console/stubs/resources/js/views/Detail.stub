<template>
    <loading-view :loading="initialLoading">
        <custom-detail-header
            class="mb-3"
            :resource="resource"
            :resource-id="resourceId"
            :resource-name="resourceName"
        />

        <div v-if="shouldShowCards">
            <cards
                v-if="smallCards.length > 0"
                :cards="smallCards"
                class="mb-3"
                :resource="resource"
                :resource-id="resourceId"
                :resource-name="resourceName"
                :only-on-detail="true"
            />

            <cards
                v-if="largeCards.length > 0"
                :cards="largeCards"
                size="large"
                :resource="resource"
                :resource-id="resourceId"
                :resource-name="resourceName"
                :only-on-detail="true"
            />
        </div>

        <!-- Resource Detail -->
        <div
            v-for="panel in availablePanels"
            :dusk="resourceName + '-detail-component'"
            class="mb-8"
            :key="panel.id"
        >
            <component
                :is="panel.component"
                :resource-name="resourceName"
                :resource-id="resourceId"
                :resource="resource"
                :panel="panel"
            >
                <div v-if="panel.showToolbar" class="flex items-center mb-3">
                    <heading :level="1" class="flex-no-shrink">{{
                        panel.name
                    }}</heading>

                    <div class="ml-3 w-full flex items-center">
                        <custom-detail-toolbar
                            :resource="resource"
                            :resource-name="resourceName"
                            :resource-id="resourceId"
                        />

                        <!-- Actions -->
                        <action-selector
                            v-if="resource"
                            :resource-name="resourceName"
                            :actions="actions"
                            :pivot-actions="{ actions: [] }"
                            :selected-resources="selectedResources"
                            :query-string="{
                                currentSearch,
                                encodedFilters,
                                currentTrashed,
                                viaResource,
                                viaResourceId,
                                viaRelationship
                            }"
                            @actionExecuted="actionExecuted"
                            class="ml-3"
                        />

                        <button
                            v-if="
                                resource.authorizedToDelete &&
                                    !resource.softDeleted
                            "
                            data-testid="open-delete-modal"
                            dusk="open-delete-modal-button"
                            @click="openDeleteModal"
                            class="btn btn-default btn-icon btn-white mr-3"
                            :title="__('Delete')"
                        >
                            <icon type="delete" class="text-80" />
                        </button>

                        <button
                            v-if="
                                resource.authorizedToRestore &&
                                    resource.softDeleted
                            "
                            data-testid="open-restore-modal"
                            dusk="open-restore-modal-button"
                            @click="openRestoreModal"
                            class="btn btn-default btn-icon btn-white mr-3"
                            :title="__('Restore')"
                        >
                            <icon type="restore" class="text-80" />
                        </button>

                        <button
                            v-if="resource.authorizedToForceDelete"
                            data-testid="open-force-delete-modal"
                            dusk="open-force-delete-modal-button"
                            @click="openForceDeleteModal"
                            class="btn btn-default btn-icon btn-white mr-3"
                            :title="__('Force Delete')"
                        >
                            <icon type="force-delete" class="text-80" />
                        </button>

                        <portal
                            to="modals"
                            v-if="
                                deleteModalOpen ||
                                    restoreModalOpen ||
                                    forceDeleteModalOpen
                            "
                        >
                            <delete-resource-modal
                                v-if="deleteModalOpen"
                                @confirm="confirmDelete"
                                @close="closeDeleteModal"
                                mode="delete"
                            />

                            <restore-resource-modal
                                v-if="restoreModalOpen"
                                @confirm="confirmRestore"
                                @close="closeRestoreModal"
                            />

                            <delete-resource-modal
                                v-if="forceDeleteModalOpen"
                                @confirm="confirmForceDelete"
                                @close="closeForceDeleteModal"
                                mode="force delete"
                            />
                        </portal>

                        <router-link
                            v-if="resource.authorizedToUpdate"
                            data-testid="edit-resource"
                            dusk="edit-resource-button"
                            :to="`/res/${resourceName}/${resourceId}/edit`"
                            class="btn btn-default btn-icon bg-primary"
                            :title="__('Edit')"
                        >
                            <icon
                                type="edit"
                                class="text-white"
                                style="margin-top: -2px; margin-left: 3px"
                            />
                        </router-link>
                    </div>
                </div>
            </component>
        </div>
    </loading-view>
</template>
<script>
import Detail from "@nova/views/Detail";

export default {
    mixins: [Detail],
    methods: {
        /**
         * Show the confirmation modal for deleting or detaching a resource
         */
        async confirmDelete() {
            this.deleteResources([this.resource], () => {
                Nova.success(
                    this.__("The :resource was deleted!", {
                        resource: this.resourceInformation.singularLabel.toLowerCase()
                    })
                );

                if (!this.resource.softDeletes) {
                    this.$router.push({
                        name: "res-{{ resource }}-index",
                        params: { resourceName: this.resourceName }
                    });
                    return;
                }

                this.closeDeleteModal();
                this.getResource();
            });
        }
    }
};
</script>
