<template>
    <loading-view :loading="loading">
        <custom-update-header
            class="mb-3"
            :resource-name="resourceName"
            :resource-id="resourceId"
        />

        <form
            v-if="panels"
            @submit="submitViaUpdateResource"
            autocomplete="off"
            ref="form"
        >
            <form-panel
                v-for="panel in panelsWithFields"
                @update-last-retrieved-at-timestamp="
                    updateLastRetrievedAtTimestamp
                "
                :panel="panel"
                :name="panel.name"
                :key="panel.name"
                :resource-id="resourceId"
                :resource-name="resourceName"
                :fields="panel.fields"
                mode="form"
                class="mb-8"
                :validation-errors="validationErrors"
                :via-resource="viaResource"
                :via-resource-id="viaResourceId"
                :via-relationship="viaRelationship"
            />

            <!-- Update Button -->
            <div class="flex items-center">
                <cancel-button />

                <progress-button
                    class="mr-3"
                    dusk="update-and-continue-editing-button"
                    @click.native="submitViaUpdateResourceAndContinueEditing"
                    :disabled="isWorking"
                    :processing="
                        wasSubmittedViaUpdateResourceAndContinueEditing
                    "
                >
                    {{ __("Update & Continue Editing") }}
                </progress-button>

                <progress-button
                    dusk="update-button"
                    type="submit"
                    :disabled="isWorking"
                    :processing="wasSubmittedViaUpdateResource"
                >
                    {{ __("Update :resource", { resource: singularName }) }}
                </progress-button>
            </div>
        </form>
    </loading-view>
</template>
<script>
import Update from "@nova/views/Update";
export default {
    mixins: [Update],
    methods: {
        async updateRequest() {
            let response = await Nova.request().post(
                `/nova-api/${this.resourceName}/${this.resourceId}`,
                this.updateResourceFormData,
                {
                    params: {
                        viaResource: this.viaResource,
                        viaResourceId: this.viaResourceId,
                        viaRelationship: this.viaRelationship,
                        editing: true,
                        editMode: "update"
                    }
                }
            );

            let redirect = this.$router.resolve({
                name: "res-{{ resource }}-detail",
                params: {
                    resourceName: this.resourceName,
                    resourceId: response.data.id
                }
            }).href;

            response.data.redirect = redirect.replace("/nova", "");

            return response;
        }
    }
};
</script>
